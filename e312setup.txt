Follow this guide roughly, but make some modifications to end up with independent install of UHD and gnuradio on E312 which does not depend on sshfs to run.

https://kb.ettus.com/Software_Development_on_the_E310_and_E312
Ignore all the PyBombs instructions.  Starting at "preparing from source"
Ceate a directory to keep everything in my user account  

$ mkdir ~/prefix

Download SDK file from Ettus. Install SDK with .sh 

$ sh ./oecore-x86_64-armv7ahf-vfp-neon-toolchain-nodistro.0.sh

choose ~/prefix to install path

$ cd ~/prefix
$ source ./environment-setup-armv7ahf-vfp-neon-oe-linux-gnueabi

This is just to confirm it worked.

$ echo $CC

 arm-oe-linux-gnueabi-gcc  -march=armv7-a -mfloat-abi=hard -mfpu=neon --sysroot=~/prefix/e300/sysroots/armv7ahf-vfp-neon-oe-linux-gnueabi

$ mkdir ~/prefix/src/
$ cd ~/prefix/src/
$ git clone https://github.com/EttusResearch/uhd.git
$ git checkout maint
$ cd uhd/host
$ mkdir build
$ cd build
 
$ cmake -DCMAKE_TOOLCHAIN_FILE=../host/cmake/Toolchains/oe-sdk_cross.cmake -DCMAKE_INSTALL_PREFIX=/usr -DENABLE_E300=ON ..

$ make -j4

Setup an sshfs mount from e3 file system on host so I can install to that location.  Mount "/" on e3 and "make install" will wipe out the factory default version of UHD that is installed in /usr/* 
$ mkdir ~/mnte3
$ sshfs root@e3:/ ~/mnte3
$ make install DESTDIR=~/mnte3

==================== gnuradio ============================================================
Build gnuradio from source using new UHD
have to install uhd also to the directory where gnuradio build wants to find it becahse I was unable to convince cmake to look in any other place.
$ cd ~/prefix
$ source ./environment-setup-armv7ahf-vfp-neon-oe-linux-gnueabi
$ cd ~/prefix/src/uhd/host/build/
$ make install DESTDIR=~/prefix/sysroots/armv7ahf-vfp-neon-oe-linux-gnueabi

$ mkdir ~/prefix/src/gnuradio/build-arm
$ cd ~/prefix/src/gnuradio/build-arm/
$ cmake -Wno-dev -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchains/oe-sdk_cross.cmake -DCMAKE_INSTALL_PREFIX=/usr -DENABLE_GR_VOCODER=OFF -DENABLE_GR_ATSC=OFF -DENABLE_GR_DTV=OFF -DENABLE_DOXYGEN=OFF ../

// make -j4 could be used to speed up build, but terminal output is confusing with multiple jobs dumping text to the screen at the same time. If errors occur, use "make -j1" so the output makes sense in time order

Install to e312 local - this will wipe out the original 3.7.9 gnuradio
$ sshfs root@e3s:/ ~/mnte3
$ cd ~/prefix/src/gnuradio/build-arm/
$ make install DESTDIR=~/mnte3

Check details on USRP hardware
$ uhd_usrp_probe

Likely, the old fpga image 14.0 will still be installed on e312 at path /usr/share/uhd/images/usrp_e310_fpga_sg3.bit.  This needs to be replaced with 16.x.  If the e312 has internet access, simply run:

$ /usr/lib/uhd/utils/uhd_images_downloader.py

This will download, unzip, and install the correct fpga image to local storage.  If the e312 does not have internet access, use the host computer to download the .tar.gz or the .zip file from http://files.ettus.com/binaries/images/ .  md5 checksup is provided for the .zip version becuase that is used by uhd_images_downloader.py.  

Copy the relevant e3x files from hoset computer to e3xx device.
$ ls -l *e3*
-rw-r--r-- 1 ssarris ssarris 4045664 Jan 30 11:52 usrp_e310_fpga.bit
-rw-r--r-- 1 ssarris ssarris 4045664 Jan 30 11:52 usrp_e310_fpga_sg3.bit
-rw-r--r-- 1 ssarris ssarris 4045664 Jan 30 11:52 usrp_e3xx_fpga_idle.bit
-rw-r--r-- 1 ssarris ssarris 4045664 Jan 30 11:52 usrp_e3xx_fpga_idle_sg3.bit

$ scp *e3* root@e3s:/usr/share/uhd/images

Confirm that it worked by checking hardware with uhd_usrp_probe

see file e312_probe_3.10.3.0.txt

Test that all of TX channels can work by observing LEDs.  No sense in using the "Antenna" parameter because we can't transmit out of an "RX2" port. have to use ch0 and ch1 from subdev spec list of daughterboards, and it will be the TX selection

Use only TRX-A as default when default is A:A A:B
$ /usr/bin/uhd_siggen -f 902000000 --const
x
Use only TRX-B by forcing subdev spec to ignore A:A 
$ /usr/bin/uhd_siggen -f 902000000 --const --spec "A:B"

Use both TX channels.
$ /usr/bin/uhd_siggen -f 902000000 --const --spec "A:A A:B" -c "0,1" \\

Test the RX channels:
Default selection of RX2-A (no subdev spec, channel selection, or ant selection)
$ /usr/lib/uhd/examples/rx_ascii_art_dft --freq 903000000 --rate 10000 --ref-lvl -30 --dyn-rng 100

Use TRX-A without subdev spec. Default using channel 0 on daughterboard A.
$ ./rx_ascii_art_dft --freq 903000000 --rate 10000 --ref-lvl -30 --dyn-rng 100 --ant "TX/RX"

Use RX2-B.  Requires subdev spec to motherboard B and antenna selection to RX2
./rx_ascii_art_dft --freq 903000000 --rate 10000 --ref-lvl -30 --dyn-rng 100 --ant "RX2" --subdev "A:B"

Use TRX-B.  Requires subdev spec to motherboard B and antenna selection to TX/RX
./rx_ascii_art_dft --freq 903000000 --rate 10000 --ref-lvl -30 --dyn-rng 100 --ant "TX/RX" --subdev "A:B"
======================================================================
Upgrade on 2019-02-16 - using ssarris-mpb
======================================================================
### build UHD for embedded system

$ cd /prefix/src/uhd$ git checkout v3.13.1.0
$ cd host
$ mkdir build
$ cd build
$ cmake -DCMAKE_TOOLCHAIN_FILE=../host/cmake/Toolchains/oe-sdk_cross.cmake -DCMAKE_INSTALL_PREFIX=/usr -DENABLE_E300=ON ..
$ make

compiled successfuly on the first try!

install to the e312

$ mkdir ~/mnte3
$ sshfs root@e312:/ ~/mnte3
$ make install DESTDIR=~/mnte3

log into e312 via ssh and run uhd_find_devices.  view output
root@ettus-e3xx-sg3:~# uhd_find_devices 
[INFO] [UHD] linux; GNU C++ version 4.9.2; Boost_105700; UHD_3.13.1.HEAD-0-gbbce3e45
--------------------------------------------------
-- UHD Device 0
--------------------------------------------------
Device Address:
    serial: 312EDFA
    name: 
    node: /dev/axi_fpga
    product: E3XX SG3
    type: e3x0

SUCCESS!

### Install another copy of UHD embedded version to a place where GNUradio cmake can find it

$ cd ~/prefix/src/uhd/host/build/
$ make install DESTDIR=~/prefix/sysroots/armv7ahf-vfp-neon-oe-linux-gnueabi

### Compile and install new UHD on my host computer so I can use the tool uhd_images_downloader and get the new FPGA image for E312 that works with new UHD

open a new terminal window to clear the environment variables of embedded development.

$ cd ~/prefix/src/uhd/host/build
$ make clean
$ cmake ..
$ make
$ sudo make install
$ sudo python3 uhd_images_downloader -t e3xx -v
when I run uhd_images_downloader from command line executable, it can't find some python libraries.  But no worry.  run from python.
$ cd /usr/share/uhd/images/
Look to see that files are present.  and delete files for e320 because I don't need them
$ sudo rm *e320*
$ scp *e3* root@e312:/usr/share/uhd/images

login to e312 and reboot
login again
e312$ uhd_usrp_probe

look at output in e312probe_3.13.1.txt
looks good for all the tests.  Only one thing strange is the lines that used to say RX/TX DSP -8 MHz to 8 MHz now say 0 MHz to 0 MHz.  I assume it has something to do with the new RFNOC architecture where DDC and DUC are included in the standard FPGA image.

### test receivers
Use RX2-B.  Requires subdev spec to motherboard B and antenna selection to RX2
./rx_ascii_art_dft --freq 903000000 --rate 10000 --ref-lvl -30 --dyn-rng 100 --ant "RX2" --subdev "A:B"	

Use TRX-B.  Requires subdev spec to motherboard B and antenna selection to TX/RX
./rx_ascii_art_dft --freq 903000000 --rate 10000 --ref-lvl -30 --dyn-rng 100 --ant "TX/RX" --subdev "A:B"

### test transmitters 
$ /usr/lib/uhd/examples/tx_waveforms --freq 902000000 --subdev "A:A A:B" --channels "0,1" --ampl 0.01 --rate 125000

### Compile and install gnuradio for embedded system
$ cd ~/prefix/src/gnuradio 
$ git pull
$ git status 
> HEAD detached at v3.7.10.1
git checkout v3.7.13.4

$ cd ~/prefix/src/gnuradio/build-arm/
$ cmake -Wno-dev -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchains/oe-sdk_cross.cmake -DCMAKE_INSTALL_PREFIX=/usr -DENABLE_GR_VOCODER=OFF -DENABLE_GR_ATSC=OFF -DENABLE_GR_DTV=OFF -DENABLE_DOXYGEN=OFF ../

Install dependencies for Ubuntu 18.04 as described in 
https://wiki.gnuradio.org/index.php/UbuntuInstall
sudo apt-get -y install git cmake g++ python-dev swig pkg-config libfftw3-dev libboost-all-dev libcppunit-dev libgsl-dev libusb-dev libsdl1.2-dev python-wxgtk3.0 python-numpy python-cheetah python-lxml doxygen libxi-dev python-sip libqt4-opengl-dev libqwt-dev libfontconfig1-dev libxrender-dev python-sip python-sip-dev python-qt4 python-sphinx libusb-1.0-0-dev libcomedi-dev libzmq3-dev python-mako python-gtk2 

$ make -j4 
# this might fail in confusing ways if missing dependencies.  If fails, use make without "-j4" so everything can happen in order and debug.

fails on function call to volk.  I have v1.3 (official support on bionic beaver). Need v1.4

go ahead and upgrade OS because I assume gnuradio will have more similar problems that need packages from newer distribution of Ubuntu

Install dependencies again to be sure they were not deleted in OS upgrade

use git command to pull in submodule.  forgot to do recursive on git clone!!!

$ git submodule update

install python package six to embedded environment prefix.
$ sudo pip install --install-option="--prefix=/home/ssarris/prefix/sysroots/x86_64-oesdk-linux/usr" --ignore-installed six

$ cd ~/prefix/src/gnuradio/build-arm/
$ make clean
$ cmake -Wno-dev -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchains/oe-sdk_cross.cmake -DCMAKE_INSTALL_PREFIX=/usr -DENABLE_GR_VOCODER=OFF -DENABLE_GR_ATSC=OFF -DENABLE_GR_DTV=OFF -DENABLE_DOXYGEN=OFF ../
$ make -j4

Install to e312 local - this will wipe out the old gnuradio
$ sshfs root@e3s:/ ~/mnte3
$ cd ~/prefix/src/gnuradio/build-arm/
$ make install DESTDIR=~/mnte3

### Install gnuradio host
$ apt-cache policy gnuradio

gnuradio:
  Installed: 3.7.13.4-1build1
  Candidate: 3.7.13.4-1build1
  Version table:
 *** 3.7.13.4-1build1 500
        500 http://us.archive.ubuntu.com/ubuntu cosmic/universe amd64 Packages
        100 /var/lib/dpkg/status

Lucky for me, the version I compiled for embedded is also the same as current version in apt repo.  Install!

$ sudo apt install gnuradio
======================================================================
Version changes on 2019-02-26 - using TCS-DEV-PC2
======================================================================
Try to run simple demo_rx_record with new versions of everything.  Appears to work OK for streaming data, but I cannot change the gain setting.
XMLRPC posts a message.  USRP is ok.  host flowgraph dies and complains about channel address <very large  number> is out of range.  So, something is wrong there.
I also notice that when I start the flowgraph using mutli_usrp uhd_usrp_source, it dumps a bunch of log messages about legacy compatibility mode.  Looks like RFNoC is the future and it hacks together 3 RFNoC blocks.  But then the channel addressing doesn't work for updates.  
Idea - modify this program to work with RFNoC architecture and not use multi_usrp anymore. 


Looks like my version of UHD is too new for the compat num of noc_shell in the newest RFNoC image.  Let me build an older version of UHD for this E312, but keep the newest version for N310
lastest version of rfnoc-devel branch on github is 8 Jul 2018.

v3.12.0.0 date is Jun 6, 2018.  

### Download and install the SDK for this computer TCS-DEV-PC2
$ wget http://files.ettus.com/e3xx_images/e3xx-release-4/oecore-x86_64-armv7ahf-vfp-neon-toolchain-nodistro.0.sh
$ bash oecore-x86_64-armv7ahf-vfp-neon-toolchain-nodistro.0.sh


$ cd /prefix/src/uhd$ git checkout v3.12.0.0
$ cd host
$ mkdir build_e312_3_12_0_0
$ cd build_e312_3_12_0_0
$ cmake -DCMAKE_TOOLCHAIN_FILE=../host/cmake/Toolchains/oe-sdk_cross.cmake -DCMAKE_INSTALL_PREFIX=/usr -DENABLE_E300=ON ..
$ make -j4
// I believe all the dependencies are sorted out from last week, so go for the glory -j4!

I notice that in this build, it is compiling lots of code in rfnoc directory. that's a good sign.  I hope I can install this version to USRP and and use the RFNOC FPGA image

looks like I might have had an old version of the fpga RFNOC image.  there are 3 releases between jan 2018 and Mar 2018 with RFNOC FPGA images.  make sure I have the newest one and then try again with new UHD.  If that doesn't work. go back and install the older UHD for my e312

16c79f2d83a54f1a4fab8fc312cf7d79  usrp_e310_fpga_RFNOC_sg3.bit (whatever version I had before)
6e951528f58892d18d0d968db5c35ac6  usrp_e310_fpga_RFNOC_sg3.bit (from newest RFNOC)

The newest RFNOC FPGA wants some crazy number of UHD compat_num.  not 2,3,4.  
[ERROR] [0/Radio_0] Major compat number mismatch for noc_shell: Expecting 3, got 195936478.

go back and rebuild UHD with ENABLE_RFNOC=ON in Cmake
### Compile and install rfnoc-devel branch and install to local host system
$ cd /prefix/src/uhd$ git checkout v3.13.1.
$ cd host
$ mkdir build_host_rfnoc-devel
$ cd build_howt_rfnoc-devel
$ cmake -DENABLE_E300=ON ..
$ make -j4

### Cross compile and install to E312
$ mkdir build_e312_rfnoc-devel
$ cd build_e312_rfnoc-devel
$ cmake -DCMAKE_TOOLCHAIN_FILE=../host/cmake/Toolchains/oe-sdk_cross.cmake -DCMAKE_INSTALL_PREFIX=/usr -DENABLE_E300=ON ..
$ make -j4

### Get FPGA repository
git clone --recursive https://github.com/EttusResearch/fpga.git
git checkout v3.13.1.0

======================================================================
Version changes on 2019-02-27 - using TCS-DEV-PC1
======================================================================
following guide - https://kb.ettus.com/Software_Development_on_the_E3xx_USRP_-_Building_RFNoC_UHD_/_GNU_Radio_/_gr-ettus_from_Source

### cross compile UHD for e312
This time, remove devices that are not necessary.  No need to waste time on old USRP stuff.
$ cd ~/prefix/src/uhd
$ git checkout master
$ git pull
$ git submodule update // there arent' any submodules, but just in case
$ git checkout v3.13.1.0
$ source ~/prefix/environment-setup-armv7ahf-vfp-neon-oe-linux-gnueabi
$ cd build_e312_3_13_1_0/

# disable all of the devices that are not relevant to the E310/E312
$ cmake -DCMAKE_TOOLCHAIN_FILE=../host/cmake/Toolchains/oe-sdk_cross.cmake -DCMAKE_INSTALL_PREFIX=/usr -DENABLE_GPSD=ON -DENABLE_B100=OFF -DENABLE_B200=OFF -DENABLE_E300=ON -DENABLE_USRP1=OFF -DENABLE_USRP2=OFF -DENABLE_X300=OFF -DENABLE_N230=OFF -DENABLE_N300=OFF -DENABLE_OCTOCLOCK=OFF -DENABLE_E320=OFF -DENABLE_RFNOC=ON ..

# Use make without -j4 so I can see the errors without scrambling
$ make

# Download a set of relevant FPGA images for v3.13.1.0
$ sudo uhd_images_downloader -t e3xx_e310 --verbose
[INFO] Images destination: /usr/local/share/uhd/images
[INFO] Target e3xx_e310_fpga_default is up to date.
[DEBUG] URLs to download:
e3xx/fpga-d6a878b/e3xx_e310_fpga_rfnoc-gd6a878b.zip
05337 kB / 05337 kB (100%) e3xx_e310_fpga_rfnoc-gd6a878b.zip
[INFO] Images download complete.

# Note that the directory /usr/local/share/uhd/images/
# might contain old FPGA images from a previous download.  

# Install this version of UHD to E312 and copy over the relevant FPGA images. Log into e312 and delete all old images first.
$ mkdir ~/mnte312
$ sshfs root@e312:/ ~/mnte312
$ make install DESTDIR=~/mnte312
$ scp /usr/local/share/uhd/images/* root@e312:/usr/share/uhd/images/

# Install another copy to the host machine for gnuradio, gr-ettus builds
$ make install DESTDIR=~/prefix/sysroots/armv7ahf-vfp-neon-oe-linux-gnueabi


$ uhd_find_devices 
[INFO] [UHD] linux; GNU C++ version 4.9.2; Boost_105700; UHD_3.13.1.HEAD-0-gbbce3e45
--------------------------------------------------
-- UHD Device 0
--------------------------------------------------
Device Address:
    serial: 312EDFA
    name: 
    node: /dev/axi_fpga
    product: E3XX SG3
    type: e3x0

I notice that the version of GNU C++ and version of Boost are very different on the e312 and the host system.  Mabye I have to downgrade my host system to older boost to make it work. Looking in CMakelistss, I see 1.63 is the highest number in the list.  probably have to downgrade to that for host install.

uhd_find_devices 
[INFO] [UHD] linux; GNU C++ version 8.2.0; Boost_106700; UHD_3.13.1.HEAD-0-gbbce3e45
No UHD Devices Found

$uhd_usrp_probe appears to work.  reads the default FPGA image, but not the RFNOC FPGA image for some reason.  oh well.

### Build gnuradio for e312
cmake -Wno-dev -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchains/oe-sdk_cross.cmake -DCMAKE_INSTALL_PREFIX=/usr -DENABLE_GR_VOCODER=OFF -DENABLE_GR_ATSC=OFF -DENABLE_GR_DTV=OFF -DENABLE_DOXYGEN=OFF ../

<wait 1+ hour>
no errors.  Intstall to USRP

### Install to the e312 over sshfs
$ mkdir ~/mnte312
$ sshfs root@e312:/ ~/mnte312
$ make install DESTDIR=~/mnte312
$ make install DESTDIR=~/prefix/sysroots/armv7ahf-vfp-neon-oe-linux-gnueabi

### Log into e312 and check if gnuradio looks like it worked.
$ gnuradio-config-info --version
 >>> 3.7.13.4

looks good!

### Cross compile and install gr-ettus for e312
$ cd ~/prefix/src/gr-ettus/build_e312_3_7_13_4
$ cmake -DCMAKE_TOOLCHAIN_FILE=~/prefix/src/gnuradio/cmake/Toolchains/oe-sdk_cross.cmake -DCMAKE_INSTALL_PREFIX=/usr ..
$ make
$ make install DESTDIR=~/mnte312
$ make install DESTDIR=~/prefix/sysroots/armv7ahf-vfp-neon-oe-linux-gnueabi

## All looks good.  Now go back and build for the host system
## 
$ cmake -DENABLE_GPSD=OFF -DENABLE_B100=OFF -DENABLE_B200=ON -DENABLE_E300=ON -DENABLE_USRP1=OFF -DENABLE_USRP2=ON -DENABLE_X300=ON -DENABLE_N230=ON -DENABLE_N300=ON -DENABLE_OCTOCLOCK=ON -DENABLE_E320=ON -DENABLE_RFNOC=ON ..
$ make

! fails on make because boost 1.67 is too new.  e312 uses boost 1.57.  Seems too old.  I remember UHD building correctly the first time at the NARIT office.  I think I had ubuntu 18.04 at that time and UHD worked for that.

lots of time wasted trying to downgrade.  fuck it.  reinstall ubuntu 18.04 LTS clean.  
$ cd ~/prefix/src/uhd/host/build_host_3_13_1_0/
$ cmake -DENABLE_GPSD=OFF -DENABLE_B100=OFF -DENABLE_B200=ON -DENABLE_E300=ON -DENABLE_USRP1=OFF -DENABLE_USRP2=ON -DENABLE_X300=ON -DENABLE_N230=ON -DENABLE_N300=ON -DENABLE_OCTOCLOCK=ON -DENABLE_E320=ON -DENABLE_RFNOC=ON ..
$ make

SUCCESS!

$ sudo make install
$ sudo ldconfig

### build gnuradio for host system
$ cd ~/prefix/src/gnuradio
$ git checkout master
$ git pull
$ git submodule update
$ git checkout v3.7.13.4
$ mkdir build_host_3_7_13_4
$ cd build_host_3_7_13_4
$ cmake ..
$ make

SUCCESS!
$ sudo make install
$ sudo ldconfig

### build gr-ettus for host system
$ cd ~/prefix/src/gr-ettus/
$ git checkout master
$ git pull
$ git submodule update 
$ mkdir build-x86_64-master
$ cd build-x86_64-master
$ cmake ..
$ make
$ sudo make install
$ sudo ldconfig

All done.  Now log into E312 and try something.
### Try ASCII spectrum DFT first
$ cd /usr/lib/uhd/examples/
$ ./rx_ascii_art_dft --freq 903000000 --rate 125000 --ref-lvl -30 --dyn-rng 100 --ant "RX2" --subdev "A:A"

then check through subdev A:B , and antenna "TX/RX" - "RX2". All look good.

Try transmit:
# TX A
tx_waveforms --freq 902000000 --subdev "A:A A:B" --channels "0" --ampl 0.01 --rate 125000

# TX B
tx_waveforms --freq 902000000 --subdev "A:A A:B" --channels "1" --ampl 0.01 --rate 125000

# Both
tx_waveforms --freq 902000000 --subdev "A:A A:B" --channels "0,1" --ampl 0.01 --rate 125000

# I still think the subdev spec is a little unusual.  if subdev == "A:A A:B", you can simply choose channels="0" or channels="1" to choose TX-A or TX-B.  You can also choose subdev="A:A", channels="0" for TX-A and subdev="A:B", channels="0" for TX-B.  Just a note.

Now try gnuradio example
on host computer
$ gnuradio-companion
$ search blocks with '/' character.  "rfnoc".  YES!  I found RFNoC!

use gnuradio-companion to recompile demo_record_host.grc and demo_record_e3.grc
Failed to load module "canberra-gtk-module"
<<< Welcome to GNU Radio Companion 3.7.13.4 >>>

======================================================================
Try RFNoC on 2019-02-28 - using TCS-DEV-PC2
======================================================================

# try gnuradio with RFNoC blocks on E312
-- missing python module ettus
notice that in my gr-ettus/build-arm/lib, I don't have the same files as in the x86 build dir.  missing libgnuradio-ettus.  Probalbly from libuhd portion of one of the compiles.  can't remember which one.

-------- in x86 build
drwxr-xr-x 6 sdrdev sdrdev   4096 feb 28 09:23 CMakeFiles
-rw-r--r-- 1 sdrdev sdrdev   2180 feb 28 09:23 cmake_install.cmake
-rw-r--r-- 1 sdrdev sdrdev    414 feb 28 09:23 CTestTestfile.cmake
-rw-r--r-- 1 sdrdev sdrdev    244 feb 28 09:23 fosphor.qrc.depends
drwxr-xr-x 4 sdrdev sdrdev   4096 feb 28 09:24 gnuradio-ettus_autogen
-rwxr-xr-x 1 sdrdev sdrdev 621800 feb 28 09:25 libgnuradio-ettus.so
-rw-r--r-- 1 sdrdev sdrdev  29447 feb 28 09:23 Makefile
-rw-r--r-- 1 sdrdev sdrdev  17124 feb 28 09:24 qrc_fosphor.cxx
-rwxr-xr-x 1 sdrdev sdrdev  26096 feb 28 09:25 test-ettus
drwxr-xr-x 3 sdrdev sdrdev   4096 feb 28 09:25 test-ettus_autogen
-rwxr-xr-x 1 sdrdev sdrdev    361 feb 28 09:23 test_ettus_test.sh

-------- in arm build
drwxr-xr-x 6 sdrdev sdrdev  4096 feb 27 16:26 CMakeFiles
-rw-r--r-- 1 sdrdev sdrdev  2235 feb 27 12:02 cmake_install.cmake
-rw-r--r-- 1 sdrdev sdrdev   410 feb 27 12:02 CTestTestfile.cmake
-rw-r--r-- 1 sdrdev sdrdev   244 feb 27 12:02 fosphor.qrc.depends
-rw-r--r-- 1 sdrdev sdrdev 28476 feb 27 12:02 Makefile
-rw-r--r-- 1 sdrdev sdrdev   357 feb 27 12:02 test_ettus_test.sh 

======================================================================
Debug gr-ettus install - using TCS-DEV-PC2
======================================================================
# Re-run the installs on the host machine.  I see that install of gr-ettus copies the appropriate python module to /usr/local/lib/python2.7/dist-packages/ettus/

# Now, I need to rebuild gr-ettus for armv7-e312.  But since the reinstall of OS,
I lost the toolchain and SDK.  Go back and download that again over lunch.  Install embedded version of UHD, GNURADIO to the toolchain directory.  Then rebuid gr-ettus and look for errors in creating pyton library that I need.

# Can't do a simple install for embedded system now that all the make files are fucked up.  rebuild uhd, gnuradio, gr-ettus for e312.  Make sure libUHD python libs happen.

# Need to use pip intall to add "requests" and "numpy" to the sdk location.  Add to both sysroots.

# installed via pip into the path of sysroots, but python 2.7.9 in sysroots area still cannot import the module.  some error about multi_array.  well documented bug in recent versions of numpy where old stuff is lying around in the system and it has a conflict.  Skip all that and install a new fresh copy of Python 2.7.15 into the SDK.  I hope it installs over top of the old one.  let's see.

http://www.benhepworth.com/blog/2016/05/18/install-python-to-separate-directory-on-linux-in-5-easy-steps/


# looks like I messed up and installed some python packages to /home/ssarris instead of /home/sdrdev.  Delete those files and try again with "requests" and "numpy"

$ sudo pip install --install-option="--prefix=/home/sdrdev/prefix/sysroots/x86_64-oesdk-linux/usr" --ignore-installed requests

$ sudo pip install --install-option="--prefix=/home/sdrdev/prefix/sysroots/x86_64-oesdk-linux/usr" --ignore-installed numpy==1.13.3

Still can't load numpy.  Another thought is that the installed version of Python 2.7.15 that I have is not the same as the 2.7.15 that I installed into the sysroot/x86.  Slightly different version building the same numpy. probably not transferrable.
install the new python 2.7.15 same as I installed in the SDK.  But prefix = /usr





## Go back and try CMAKE again for UHD embedded.

$ source ~/prefix/environment-setup-armv7ahf-vfp-neon-oe-linux-gnueabi
# disable all of the devices that are not relevant to the E310/E312.  Force enable RFNOC and PYTHON_API.  If dependencies are missing, we will learn now during cmake not at runtime. Need PYTHON_API to use gr-ettus for RFNoC blocks

$ cmake -DCMAKE_TOOLCHAIN_FILE=../host/cmake/Toolchains/oe-sdk_cross.cmake -DCMAKE_INSTALL_PREFIX=/usr -DENABLE_GPSD=ON -DENABLE_B100=OFF -DENABLE_B200=OFF -DENABLE_E300=ON -DENABLE_USRP1=OFF -DENABLE_USRP2=OFF -DENABLE_X300=OFF -DENABLE_N230=OFF -DENABLE_N300=OFF -DENABLE_OCTOCLOCK=OFF -DENABLE_E320=OFF -DENABLE_RFNOC=ON -DENABLE_PYTHON_API=ON ..
